@using FactFinderWeb.ModelsView
@model InvestViewModel
@{
    ViewData["Title"] = "Invest In The Now";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<style>
    .text-truncate-3 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }

    .formfield {
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
        color: #333;
        text-align: left;
    }
</style>

<div class="mt-4 ">
    @await Html.PartialAsync("_StepProgress", 6)
    <div style="background-color:	#E6E6FA" class="px-4  py-2 g-4 rounded d-flex flex-column gap-3">
        <div style="color:#006400" class="d-flex justify-content-between align-items-center ">
            <h2 class="mb-0" style="width: 80%;">6. Invest In The Now</h2>
            <a href="javascript:void(0);" onclick="submitFormAsSave()" class="btn btn-primary px-3 py-1 rounded ">Save</a>
        </div>
    </div>
    <div style="background-color: 	#fcfcff" class="px-4  py-2 g-4 rounded d-flex flex-column gap-3">
        <div class="d-flex justify-content-end mt-3 mx-3 bg-light ">
            @if (ViewData["msg"] != null)
            {
                <p style="color: green;">@ViewData["msg"]</p>
            }
        </div>
    </div>

    <!-- form -->
    <form id="mainForm"  style="background-color: #F5F5F5" class="mt-3 p-3 d-flex flex-column gap-4  rounded" asp-controller="Comprehensive" asp-action="Invest">
        <!--plan details -->
        <fieldset class="d-flex flex-column gap-2">
            <legend style="color: #3B3737" class="fw-bold">
                <h3 class="text-center"> Total available Savings for Investments</h3>
            </legend>
            <div style="color:	#006400" class="row g-3 px-5 d-flex justify-content-center">
                <div class="col-12 col-md-3 formfield mx-3">
                    <label class="form-label d-flex justify-content-center align-items-center gap-1" asp-for="@Model.MonthlySavings">
                        Monthly Savings
                    </label>
                    <input asp-for="@Model.MonthlySavings" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input  text-end" placeholder="0.00" />
                </div>
                <div class="col-12 col-md-3 formfield mx-3">
                    <label class="form-label d-flex justify-content-center align-items-center gap-1" asp-for="@Model.IntendedSIPmonthly">
                        Intended SIP monthly
                    </label>
                    <input asp-for="@Model.IntendedSIPmonthly" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input  text-end" placeholder="0.00" />
                </div>

                <div class="col-12 col-md-3 formfield mx-3">
                    <label class="form-label d-flex justify-content-center align-items-center gap-1" asp-for="@Model.AvailableLumpsum">
                        Available Lumpsum (if any)
                    </label>
                    <input asp-for="@Model.AvailableLumpsum" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input  text-end" placeholder="0.00" />
                </div>
            </div>

            <legend style="color: #3B3737" class="fw-bold my-2">
                <h4 class="text-center"> Action plan for Financial Goals</h4>                
            </legend>

            <div style="color:	#006400" class="row ">
                <div class="col-0 col-md-1"></div>
                <div class="col-12 col-md-10">
                    <table class="table table-bordered">
                       <thead>
                           <tr>
                               <th>Name of the Goal  </th>
                               <th style="text-align:center;">Lumpsum Amount <br/>intended for this goal </th>
                               <th style="text-align:center;">SIP Amount <br />intended for this goal</th>
                           </tr>
                       </thead>
                        <tbody>
                        @{
                        if (Model.InvestMVList != null && Model.InvestMVList.Any())
                        {
                        int dataindex = 1;
                        decimal? totalLumpsum = 0;
                        decimal? totalSIP = 0;
                        @for (int i = 0; i < Model.InvestMVList.Count; i++)
                        { 
                        <tr>
                            <td style="width: 50%;" class="text-end">
                            <input type="hidden" asp-for="InvestMVList[i].Goalid" readonly="readonly"
                            class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary" />
                             <input asp-for="InvestMVList[i].GoalName" readonly="readonly" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary" tabindex="-1" />
                            </td>
                            <td>
                               <input asp-for="InvestMVList[i].LumpsumAmount" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input  text-end" placeholder="0.00" />
                            </td>
                            <td>
                        <input asp-for="InvestMVList[i].Sipamount" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input text-end" placeholder="0.00" />
                            </td>
                        </tr>
                        }

                        <tr>
                        <td class="text-end">Total</td>
                        <td>  <input asp-for="@totalLumpsum" readonly="readonly" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary  amount-input  text-end" value="@totalLumpsum" placeholder="0.00" /></td>
                        <td><input asp-for="@totalSIP" readonly="readonly" class="form-control outline-none w-[40%] rounded-lg mx-[26%] float-end peer focus:outline-secondary amount-input  text-end" value="@totalSIP" placeholder="0.00" /></td>
                        </tr>
                        }else
                        {
                                    <tr><td colspan="3" class="text-center">You haven't selected any goals yet.</td></tr>
                        }
                   }
                            
                   </table>
                </div>
                <div class="col-0 col-md-1"></div>
            </div>
        </fieldset>

        <div class="d-flex justify-content-end mt-3 mx-2 mx-md-5">
            <a asp-action="executionwithprecision" class="btn btn-secondary px-5 py-1 rounded mx-2 mx-md-5">Previous</a>

            <button name="btnSubmit" id="btnSubmit" class="btn btn-primary px-5 py-1 rounded ">Submit</button>
        </div>

    </form>
</div>


<!-- Thank You Modal -->
<div class="modal fade" id="thankYouModal" tabindex="-1" aria-labelledby="thankYouLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-header">
                <h5 class="modal-title w-100" id="thankYouLabel">Submission Complete</h5>
            </div>
            <div class="modal-body">
                <p>Thank you for submitting the Fact Finder successfully.</p>
                <p>Now, we will design your <strong>"Financial Journey Programme"</strong> based on the information provided. If we find some information is missing, please allow us to contact you.</p>
                <p><strong>Team Mainstream</strong></p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary" id="thankYouOkBtn">OK</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
     function formatToIndianNumber(input) {
            let raw = input.value.replace(/,/g, '');
            let value = parseFloat(raw);

            if (isNaN(value)) {
                input.value = '0';
                return;
            }
            
            value = Math.round(value);// Round to nearest whole number

            let intPart = value.toString();// Convert to string
            
            let lastThree = intPart.slice(-3);// Apply Indian comma formatting
            let otherDigits = intPart.slice(0, -3);
            if (otherDigits !== "") {
                lastThree = "," + lastThree;
            }
            let formatted = otherDigits.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree;

            input.value = formatted;
        }

        function calculateTotals() {
            let totalLumpsum = 0;
            let totalSIP = 0;

            const lumpsumInputs = document.querySelectorAll('input[name$=".LumpsumAmount"]');
            const sipInputs = document.querySelectorAll('input[name$=".Sipamount"]');

            lumpsumInputs.forEach(input => {
                const value = parseFloat(input.value.replace(/,/g, '')) || 0;
                totalLumpsum += value;
            });

            sipInputs.forEach(input => {
                const value = parseFloat(input.value.replace(/,/g, '')) || 0;
                totalSIP += value;
            })             

               const totalLumpsumInput = document.getElementById("totalLumpsum");
               const totalSIPInput = document.getElementById("totalSIP");

                // Set the raw total, then format
                if (totalLumpsumInput) {
                    totalLumpsumInput.value = totalLumpsum;
                    formatToIndianNumber(totalLumpsumInput);
                    totalLumpsumInput.placeholder = '0.00';
                }

                if (totalSIPInput) {
                    totalSIPInput.value = totalSIP;
                    formatToIndianNumber(totalSIPInput);
                    totalSIPInput.placeholder = '0.00';
                }

                lumpsumInputs.forEach(input => {
                    let raw = input.value.replace(/,/g, '');
                    let value = parseFloat(raw);

                    if (isNaN(value) || value === 0) {
                        input.value = ''; // Leave empty if 0
                        input.placeholder = '0.00'; // Optional
                    } else {
                        input.value = formatINR(value); // Format if > 0
                    }
                });

                sipInputs.forEach(input => {
                    let raw = input.value.replace(/,/g, '');
                    let value = parseFloat(raw);

                    if (isNaN(value) || value === 0) {
                        input.value = '';
                        input.placeholder = '0.00';
                    } else {
                        input.value = formatINR(value);
                    }
                });
               // document.getElementById("totalLumpsum").value = totalLumpsum.toFixed(2);
            //document.getElementById("totalSIP").value = totalSIP.toFixed(2);
        }

        window.addEventListener("DOMContentLoaded", () => {
            const allAmountInputs = document.querySelectorAll('input[name$=".LumpsumAmount"], input[name$=".Sipamount"]');
                        
            calculateTotals();// Initial calculation

            allAmountInputs.forEach(input => {                
                input.addEventListener("input", calculateTotals);// Recalculate totals on input
                                
                input.addEventListener("blur", function () {// Format to 2 decimals on blur
                    formatToIndianNumber(document.getElementById("totalSIP")); 
                    formatToIndianNumber(document.getElementById("totalLumpsum")); 
                    calculateTotals(); // Recalculate after formatting
                });
            });

             document.querySelectorAll('.amount-input').forEach(input => {
            // Apply formatting on page load
            let rawValue = unformatINR(input.value);
            input.value = formatINR(rawValue);
                });
        });

        
            function formatINR(value) {
            if (!value) return '';
            let number = parseFloat(value);
            if (isNaN(number)) return value;
            
            number = Math.round(number);// Round off
            
            return number.toLocaleString('en-IN');// Format in Indian style (e.g., 1,23,456)
            }

            function unformatINR(value) {
                return value.replace(/,/g, '');
            }

            document.querySelectorAll('.amount-input').forEach(input => {
                // On blur → format the number
                input.addEventListener('blur', () => {
                    let rawValue = unformatINR(input.value);
                    input.value = formatINR(rawValue);
                });

                // On focus → unformat it
                input.addEventListener('focus', () => {
                    input.value = unformatINR(input.value);
                });
            });

            // On form submit → convert back to raw
            document.querySelector('form')?.addEventListener('submit', (e) => {
                document.querySelectorAll('.amount-input').forEach(input => {
                    input.value = unformatINR(input.value);
                });
            });
  

        document.addEventListener("DOMContentLoaded", function () {
            var showModal = '@ViewBag.ShowThankYou' === 'True';
            if (showModal) {
                var thankYouModal = new bootstrap.Modal(document.getElementById('thankYouModal'));
                thankYouModal.show();

                document.getElementById('thankYouOkBtn').addEventListener('click', function () {
                    window.location.href = '/dashboard'; // Redirect on OK
                });
            }
        });
                       function submitFormAsSave() {
                   var form = document.getElementById("mainForm");
                   if (!form) {
                       console.error("Form not found");
                       return;
                   }

                   var input = document.createElement("input");
                   input.type = "hidden";
                   input.name = "btnSubmit";
                   input.value = "Save";
                   form.appendChild(input);

                   form.submit();
               }
    </script>
    <!--  (for modal) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <partial name="_ValidationScriptsPartial" />

}

